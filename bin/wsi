#!/usr/bin/env node

const fs = require('fs');
const readline = require('readline');
const _  = require('../src/pbnj/core.js');
const ws = require('../src/pbnj/wonderscript.js');

function currentModuleName() {
  return ws.MODULE_SCOPE["@@NAME@@"];
}

function loadCoreLib() {
  ws.readFile(__dirname + "/../src/pbnj/core.ws");
}
  
if (process.argv.length === 3) {
  try {
    ws.readString('(module pbnj.user)');
    ws.readFile([process.cwd(), process.argv[2]].join('/'));
    process.exitCode = 0;
  }
  catch (e) {
    console.error(e);
    process.exitCode = 1;
  }
}
else {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    terminal: true
  });
  
  ws.readString('(module pbnj.user)');
  ws.globalEnv.define('*dir*', process.cwd());
  ws.globalEnv.define('*file*', null);
  rl.setPrompt(_.str(currentModuleName(), "> "));
  rl.prompt();
  
  var stack = _.list();
  rl.on('line', function(line) {
    try {
      var input = line.trim();
      if (input === 'exit') {
        console.log("Bye for now!");
        process.exit(0);
      }
      else {
        var res = ws.readString(input);
        console.log(_.str("=> ", ws.inspect(res)));
        rl.setPrompt(_.str(currentModuleName(), "> "));
        stack = _.conj(stack, res);
      }
    }
    catch (e) {
      console.error(e);
    }
    rl.prompt();
  });
  process.exitCode = 0;
}
